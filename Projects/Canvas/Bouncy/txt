<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bouncy Ball</title>
    <style>
        * {
            margin: 0;
            padding: 0;
        }

        canvas {
            box-sizing: border-box;
            overflow: hidden;
            background-color: black;
            position: absolute;
            z-index: -100;
            top: 0;
            bottom: 0;
            /* border: 30px dotted red; */
            /* resize: both; */

        }
    </style>
</head>


<body>
    <canvas></canvas>
</body>
<script>
    const canvas = document.querySelector('canvas')
    canvas.width = window.innerWidth
    canvas.height = window.innerHeight

    let c = canvas.getContext('2d')

    let touching = (ball1, ball2) => {
        let dx = Math.abs(ball1.x - ball2.x)
        let dy = Math.abs(ball1.y - ball2.y)
        let d = Math.sqrt(dx ** 2 + dy ** 2) - dx - dy
        return d
    }

    class arc {
        constructor(x, y, r, startDeg, endDeg, clockwise, strokeStyle, fillStyle, lineThickness) {
            this.x = x
            this.y = y
            this.startDeg = startDeg
            this.endDeg = endDeg * Math.PI / 180
            this.r = r
            this.or = r
            this.clockwise = !!clockwise
            this.lineThickness = lineThickness
            this.fillStyle = fillStyle
            this.strokeStyle = strokeStyle
        }


        static random(min, max) {
            min = Math.ceil(min);
            max = Math.floor(max);
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }
        create() {
            // console.log('creating')
            c.beginPath()
            c.arc(this.x, this.y, this.r, this.startDeg, this.endDeg, this.clockwise)
            this.cStrokeStyle = c.strokeStyle
            c.strokeStyle = this.strokeStyle
            this.cFillStyle = c.fillStyle
            c.fillStyle = this.fillStyle
            this.cLineThickness = c.lineThickness
            c.lineThickness = this.lineThickness
            c.closePath()
            c.fill()
            c.stroke()
            c.fillStyle = this.cFillStyle
            c.strokeStyle = this.cStrokeStyle
            c.lineThickness = this.cLineThickness
        }
    }


    let balls = []
    let number = Math.ceil(innerWidth / 200) * 100
    for (let i = 0; i < number; i++) {
        let step = arc.random(100, 200) / 100
        let r = arc.random(5, 10)
        let ball = new arc(
            arc.random(2 * r, canvas.width - 2 * r),
            arc.random(2 * r, canvas.height - 2 * r),
            r,
            0,
            360,
            true,
            'rgba(0,0,0,0)',
            [
                "#FF6633",
                "#FFB399",
                "#FF33FF",
                "#FFFF99",
                "#00B3E6",
                "#E6B333",
                "#3366E6",
                "#999966",
                "#809980",
                "#E6FF80",
                "#1AFF33",
                "#999933",
                "#FF3380",
                "#CCCC00",
                "#66E64D",
                "#4D80CC",
                "#FF4D4D",
                "#99E6E6",
                "#6666FF"
            ][arc.random(0, 17)],
            1
        )
        let goto = () => {
            ball.x = arc.random(2 * r, canvas.width - 2 * r)
            ball.y = arc.random(2 * r, canvas.height - 2 * r)
            let isTouching = (balls.map((target) => {
                if (touching(ball, target) < 0) {
                    goto()
                }
            }))
        }





        ball.dx = [step, -step][Math.round(Math.random())]
        ball.dy = [step, -step][Math.round(Math.random())]

        balls.push(ball)
    }

    let mouseOn = false




    // console.log(ball)
    const mouse = {
        x: undefined,
        y: undefined,
    }

    let animate = () => {
        requestAnimationFrame(animate)
        c.clearRect(0, 0, canvas.width, canvas.height)
        balls.forEach((ball) => {
            // if (ball.x + ball.r >= canvas.width || ball.x <= ball.r) {
            //     ball.dx = -ball.dx

            // }
            // if (ball.y + ball.r >= canvas.height || ball.y <= ball.r) {
            //     ball.dy = -ball.dy
            // }
            // if (Math.abs(ball.x - mouse.x) <= 50 &&
            //     Math.abs(ball.y - mouse.y) <= 50 && ball.r < 30
            //     && mouseOn) {
            //     ball.r += 1
            // }
            // else if (ball.r > ball.or) {
            //     ball.r -= 1
            // }
            // ball.y += ball.dy
            // ball.x += ball.dx
            ball.create()
        })

    }
    animate()

    canvas.onmousemove = (e) => {
        mouse.x = e.clientX
        mouse.y = e.clientY
        // console.log(mouse)
    }

    window.onresize = () => {
        canvas.width = window.innerWidth
        canvas.height = window.innerHeight
        balls = []
        let number = Math.ceil(innerWidth / 200) * 100
        for (let i = 0; i < number; i++) {
            let step = arc.random(100, 200) / 100
            let r = arc.random(5, 10)
            ball = new arc(
                arc.random(2 * r, canvas.width - 2 * r),
                arc.random(2 * r, canvas.height - 2 * r),
                r,
                0,
                360,
                true,
                'rgba(0,0,0,0)',
                [
                    "#FF6633",
                    "#FFB399",
                    "#FF33FF",
                    "#FFFF99",
                    "#00B3E6",
                    "#E6B333",
                    "#3366E6",
                    "#999966",
                    "#809980",
                    "#E6FF80",
                    "#1AFF33",
                    "#999933",
                    "#FF3380",
                    "#CCCC00",
                    "#66E64D",
                    "#4D80CC",
                    "#FF4D4D",
                    "#99E6E6",
                    "#6666FF"
                ][arc.random(0, 17)],
                1
            )
            ball.dx = [step, -step][Math.round(Math.random())]
            ball.dy = [step, -step][Math.round(Math.random())]

            balls.push(ball)
        }
        // balls.forEach((ball) => {
        //     if (ball.x + 20 > innerWidth || ball.x - 20 < 0 || ball.y + 20 > innerWidth || ball.y - 20 < 0) {
        //         console.log('ball')
        //         ball.x = arc.random(2 * ball.r, canvas.width - 2 * ball.r)
        //         ball.y = arc.random(2 * ball.r, canvas.height - 2 * ball.r)

        //         ball.create()
        //     }

        // })
    }
    canvas.onmouseover = e => mouseOn = true
    canvas.onmouseout = e => mouseOn = false
</script>

</html>